# Stubs for marathon.models.info (Python 3.7)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from .base import MarathonObject as MarathonObject, MarathonResource as MarathonResource

class MarathonInfo(MarathonResource):
    event_subscriber = ...  # type: Any
    framework_id = ...  # type: Any
    http_config = ...  # type: Any
    leader = ...  # type: Any
    marathon_config = ...  # type: Any
    name = ...  # type: Any
    version = ...  # type: Any
    elected = ...  # type: Any
    zookeeper_config = ...  # type: Any
    buildref = ...  # type: Any
    def __init__(
        self,
        event_subscriber: Optional[Any] = ...,
        framework_id: Optional[Any] = ...,
        http_config: Optional[Any] = ...,
        leader: Optional[Any] = ...,
        marathon_config: Optional[Any] = ...,
        name: Optional[Any] = ...,
        version: Optional[Any] = ...,
        elected: Optional[Any] = ...,
        zookeeper_config: Optional[Any] = ...,
        buildref: Optional[Any] = ...,
    ) -> None: ...

class MarathonConfig(MarathonObject):
    checkpoint = ...  # type: Any
    executor = ...  # type: Any
    failover_timeout = ...  # type: Any
    features = ...  # type: Any
    ha = ...  # type: Any
    hostname = ...  # type: Any
    local_port_min = ...  # type: Any
    local_port_max = ...  # type: Any
    master = ...  # type: Any
    mesos_leader_ui_url = ...  # type: Any
    mesos_role = ...  # type: Any
    mesos_user = ...  # type: Any
    webui_url = ...  # type: Any
    reconciliation_initial_delay = ...  # type: Any
    reconciliation_interval = ...  # type: Any
    task_launch_timeout = ...  # type: Any
    task_reservation_timeout = ...  # type: Any
    marathon_store_timeout = ...  # type: Any
    def __init__(
        self,
        checkpoint: Optional[Any] = ...,
        executor: Optional[Any] = ...,
        failover_timeout: Optional[Any] = ...,
        framework_name: Optional[Any] = ...,
        ha: Optional[Any] = ...,
        hostname: Optional[Any] = ...,
        leader_proxy_connection_timeout_ms: Optional[Any] = ...,
        leader_proxy_read_timeout_ms: Optional[Any] = ...,
        local_port_min: Optional[Any] = ...,
        local_port_max: Optional[Any] = ...,
        master: Optional[Any] = ...,
        mesos_leader_ui_url: Optional[Any] = ...,
        mesos_role: Optional[Any] = ...,
        mesos_user: Optional[Any] = ...,
        webui_url: Optional[Any] = ...,
        reconciliation_initial_delay: Optional[Any] = ...,
        reconciliation_interval: Optional[Any] = ...,
        task_launch_timeout: Optional[Any] = ...,
        marathon_store_timeout: Optional[Any] = ...,
        task_reservation_timeout: Optional[Any] = ...,
        features: Optional[Any] = ...,
    ) -> None: ...

class MarathonZooKeeperConfig(MarathonObject):
    zk = ...  # type: Any
    zk_hosts = ...  # type: Any
    zk_path = ...  # type: Any
    zk_state = ...  # type: Any
    zk_max_versions = ...  # type: Any
    zk_timeout = ...  # type: Any
    zk_connection_timeout = ...  # type: Any
    zk_future_timeout = ...  # type: Any
    zk_session_timeout = ...  # type: Any
    def __init__(
        self,
        zk: Optional[Any] = ...,
        zk_future_timeout: Optional[Any] = ...,
        zk_hosts: Optional[Any] = ...,
        zk_max_versions: Optional[Any] = ...,
        zk_path: Optional[Any] = ...,
        zk_session_timeout: Optional[Any] = ...,
        zk_state: Optional[Any] = ...,
        zk_timeout: Optional[Any] = ...,
        zk_connection_timeout: Optional[Any] = ...,
    ) -> None: ...

class MarathonHttpConfig(MarathonObject):
    assets_path = ...  # type: Any
    http_port = ...  # type: Any
    https_port = ...  # type: Any
    def __init__(
        self,
        assets_path: Optional[Any] = ...,
        http_port: Optional[Any] = ...,
        https_port: Optional[Any] = ...,
    ) -> None: ...

class MarathonEventSubscriber(MarathonObject):
    type = ...  # type: Any
    http_endpoints = ...  # type: Any
    def __init__(
        self, type: Optional[Any] = ..., http_endpoints: Optional[Any] = ...
    ) -> None: ...
